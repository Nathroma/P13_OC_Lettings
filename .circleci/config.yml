version: 2.1

orbs:
  python: circleci/python@1.2


workflows:
  integration:
    jobs:
      - build-test
      - container:
          requires:
            - build-test
      - deploy:
          requires:
            - build-test
            - container
          filters:
            branches:
              only: master

jobs:
  build-test: 
    docker:
      - image: cimg/python:3.8
    steps:
      - checkout
      - run:
          name: Echo SECRET_KEY
          command : |
            echo $SECRET_KEY
      - run:
          name: Install packages
          command: |
            python3 -m venv env
            . env/bin/activate
            pip install -r requirements.txt

      - run:
          name: pytests
          command: |
            . env/bin/activate
            python3 manage.py test
      - run:
          name: linting
          command: |
            . env/bin/activate
            flake8 --format=html --htmldir=flake-report
      - store_artifacts:
          path: flake-report/
          destination: flake-report
  
  container:
    docker:
      - image: cimg/python:3.8
    
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Package app and push to DockerHub
          command: |
            echo $SECRET_KEY | echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
            docker build -t $DOCKER_USERNAME/oc_lettings:$CIRCLE_SHA1 .
            docker push $DOCKER_USERNAME/oc_lettings:$CIRCLE_SHA1

  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            set -x
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a ${HEROKU_APP_NAME} web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a ${HEROKU_APP_NAME} web